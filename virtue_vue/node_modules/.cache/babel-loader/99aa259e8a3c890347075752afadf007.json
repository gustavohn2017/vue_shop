{"ast":null,"code":"import axios from 'axios';\nimport ProductBox from '@/components/ProductBox.vue';\nexport default {\n  name: 'Search',\n  components: {\n    ProductBox\n  },\n  data() {\n    return {\n      products: [],\n      query: ''\n    };\n  },\n  mounted() {\n    document.title = 'Busca | Djackets';\n    let uri = window.location.search.substring(1);\n    let params = new URLSearchParams(uri);\n    if (params.get('query')) {\n      this.query = params.get('query');\n      this.performSearch();\n    }\n  },\n  methods: {\n    async performSearch() {\n      this.$store.commit('setIsLoading', true);\n      await axios.post('/api/v1/products/search/', {\n        'query': this.query\n      }).then(response => {\n        this.products = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Gustavo\\Desktop\\Portif√≥lio\\ecommerce\\virtue_vue\\src\\views\\Search.vue"],"names":[],"mappings":"AAkBA,OAAO,KAAI,MAAO,OAAM;AACxB,OAAO,UAAS,MAAO,6BAA4B;AAEnD,eAAe;EACX,IAAI,EAAE,QAAQ;EACd,UAAU,EAAE;IACR;EACJ,CAAC;EACD,IAAI,GAAG;IACH,OAAO;MACH,QAAQ,EAAE,EAAE;MACZ,KAAK,EAAE;IACX,CAAA;EACJ,CAAC;EACD,OAAO,GAAG;IACN,QAAQ,CAAC,KAAI,GAAI,kBAAiB;IAElC,IAAI,GAAE,GAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAA;IAC5C,IAAI,MAAK,GAAI,IAAI,eAAe,CAAC,GAAG,CAAA;IAEpC,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;MACrB,IAAI,CAAC,KAAI,GAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAA;MAE/B,IAAI,CAAC,aAAa,EAAC;IACvB;EACJ,CAAC;EACD,OAAO,EAAE;IACL,MAAM,aAAa,GAAG;MAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAA;MAEvC,MAAM,KAAI,CACL,IAAI,CAAC,0BAA0B,EAAE;QAAC,OAAO,EAAE,IAAI,CAAC;MAAK,CAAC,CAAA,CACtD,IAAI,CAAC,QAAO,IAAK;QACd,IAAI,CAAC,QAAO,GAAI,QAAQ,CAAC,IAAG;MAChC,CAAC,CAAA,CACA,KAAK,CAAC,KAAI,IAAK;QACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAA;MACrB,CAAC,CAAA;MAEL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,KAAK,CAAA;IAC5C;EACJ;AACJ,CAAA","sourcesContent":["<template>\r\n    <div class=\"page-search\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title\">Search</h1>\r\n\r\n                <h2 class=\"is-size-5 has-text-grey\">Search term: \"{{ query }}\"</h2>\r\n            </div>\r\n\r\n            <ProductBox \r\n                v-for=\"product in products\"\r\n                v-bind:key=\"product.id\"\r\n                v-bind:product=\"product\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport ProductBox from '@/components/ProductBox.vue'\r\n\r\nexport default {\r\n    name: 'Search',\r\n    components: {\r\n        ProductBox\r\n    },\r\n    data() {\r\n        return {\r\n            products: [],\r\n            query: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        document.title = 'Busca | Djackets'\r\n\r\n        let uri = window.location.search.substring(1)\r\n        let params = new URLSearchParams(uri)\r\n\r\n        if (params.get('query')) {\r\n            this.query = params.get('query')\r\n\r\n            this.performSearch()\r\n        }\r\n    },\r\n    methods: {\r\n        async performSearch() {\r\n            this.$store.commit('setIsLoading', true)\r\n\r\n            await axios\r\n                .post('/api/v1/products/search/', {'query': this.query})\r\n                .then(response => {\r\n                    this.products = response.data\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}